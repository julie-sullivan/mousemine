#------------------------------------------------------
[DEFAULT]

# Default comparison operator. Possible values: eq, ne, lt, le, gt, ge
# Comparison is: mgi-result operator mm-result.
# You can also provide the body of a lamda expression, with "x" bound to
# the mgi result and y bound to the mm result. So, for example
# compare: le
# is the same as
# compare: x <= y
# This allows you to do things like apply string operators, e.g.,
# compare: x.lower() == y.lower()
#
compare: eq

# Filter function. The results of each query are passed through a filter
# function, specified as a lambda expression. The default does nothing, but
# a given test can override it.
filter: x

# A test gene to use.
testid:MGI:88388
testid2:MGI:97490

#
#------------------------------------------------------
# TESTS
#------------------------------------------------------

[TEST:Counts of mouse protein coding genes should be equal]
mgi: 
     SELECT count(*)
     FROM MRK_MCV_Cache
     WHERE term='protein coding gene'

mousemine: 
	   SELECT count(*)
	   FROM gene g
	   WHERE mgitype = 'protein coding gene'

#------------------------------------------------------
[TEST:Basic data for mouse test gene  should be the same]
mgi:
	SELECT m.symbol, m.name, mc.genomicChromosome AS "chromosome", mc.startCoordinate AS "start"
	FROM MRK_Marker m, MRK_Location_Cache mc, ACC_Accession a
	WHERE a.accid = '%(testid)s'
	AND a._logicaldb_key = 1
	AND a._mgitype_key = 2
	AND a._object_key = m._marker_key
	AND m._marker_key = mc._marker_key

mousemine:
	SELECT g.symbol, g.name, c.primaryidentifier AS "chromosome", l.intermine_start AS "start"
	FROM gene g, location l, chromosome c
	WHERE g.primaryIdentifier = '%(testid)s'
	AND g.chromosomelocationid = l.id
	AND l.locatedonid = c.id


#------------------------------------------------------
[TEST:Total number of alleles should be the same]
mgi: 
     SELECT count(*)
     FROM all_allele
     WHERE _marker_key is null
     OR _marker_key in (
         SELECT _marker_key
	     FROM mrk_marker
	         WHERE _marker_status_key IN (1,3) /* exclude withdrawn markers! */
		     AND _organism_key = 1)

mousemine: 
	   SELECT count(*)
	   FROM allele 

#------------------------------------------------------
[TEST:Counts of genotypes should be equal]
mgi: 
     SELECT count(*)
     FROM GXD_Genotype

mousemine: 
	   SELECT count(*)
	   FROM genotype g

#------------------------------------------------------
[TEST:Count of publications should be a tiny bit less in MM]
mgi:
	SELECT count(*)
	from BIB_Refs

mousemine:
	SELECT count(*)
	from Publication
	where mgiid is not null

filter: x[0]['count']

compare: (x > y and (x-y)/x < .05)

#------------------------------------------------------
[TEST:The name of the test gene is the same in both dbs]
mgi: 
     SELECT name
     FROM MRK_Marker
     WHERE _marker_key = (
       SELECT _object_key
         FROM ACC_Accession
	   WHERE accid = '%(testid)s'
	     AND _logicaldb_key = 1
	       AND _mgitype_key = 2
	         AND preferred = 1
		 )

mousemine: 
	   SELECT name
	   FROM gene 
	   WHERE primaryidentifier = '%(testid)s'

#------------------------------------------------------
[TEST:Number of alleles for test gene should be the same]
mgi: 
     SELECT count(*)
     FROM ALL_Allele
     WHERE _marker_key = (
        SELECT _object_key
	   FROM ACC_Accession
	      WHERE accid='%(testid)s'
	         AND _logicaldb_key = 1
		    AND _mgitype_key = 2
		       AND preferred = 1)

mousemine: 
	   SELECT count(*)
	   FROM allele 
	   WHERE featureid = (
	       SELECT id
	           FROM gene
		       WHERE primaryIdentifier = '%(testid)s')

#------------------------------------------------------
[TEST:Number of genotypes for test gene  should be the same]
mgi: 
     SELECT count(distinct _genotype_key)
     FROM GXD_AlleleGenotype
     WHERE _marker_key = (
           SELECT _object_key
           FROM ACC_Accession
           WHERE accid='%(testid)s'
           AND _logicaldb_key = 1
           AND _mgitype_key = 2
           AND preferred = 1)

mousemine: 
	   SELECT count(distinct genotypes)
	   FROM allelesgenotypes
	   WHERE alleles IN (
	     SELECT id 
	       FROM allele
	         WHERE featureid = (
		     SELECT id 
		         FROM gene 
			     WHERE primaryIdentifier = '%(testid)s'))

#------------------------------------------------------
[TEST:Number of GO annotations for the test gene]
mgi:
	SELECT count(*)
	FROM VOC_Annot va, ACC_Accession aa
	WHERE va._annottype_key = 1000
	AND va._object_key = aa._object_key
	AND aa._mgitype_key = 2
	AND aa._logicaldb_key = 1
	AND aa.preferred = 1
	AND aa.accid = '%(testid)s'

mousemine:
	SELECT count(*)
	FROM goannotation ga, gene g
	WHERE ga.subjectid = g.id
	AND g.primaryIdentifier = '%(testid)s'

#------------------------------------------------------
[TEST:Distinct phenotype term ids annotated to genotypes for test gene]
mgi:
	SELECT distinct aa2.accid as "id"
	FROM VOC_Annot va, GXD_AlleleGenotype ag, ACC_Accession aa, ACC_Accession aa2
	WHERE va._annottype_key = 1002
	AND va._object_key = ag._genotype_key
	AND ag._marker_key = aa._object_key
	AND aa._logicaldb_key = 1
	AND aa.preferred = 1
	AND aa._mgitype_key = 2
	AND aa.accid = '%(testid)s'
	AND aa2._object_key = va._term_key
	AND aa2._mgitype_key = 13
	AND aa2._logicaldb_key = 34
	AND aa2.preferred = 1
	ORDER BY id

mousemine:
	SELECT distinct mp.identifier as "id"
	FROM OntologyAnnotation oa, MPTerm mp, GenotypeAllelePair ga, Gene g
	WHERE oa.ontologytermid = mp.id
	AND oa.subjectid = ga.genotypeid
	AND ga.featureid = g.id
	AND g.primaryIdentifier = '%(testid)s'
	ORDER BY id

#------------------------------------------------------
[TEST:Total number of cell lines]
mgi:
	SELECT count(*)
	FROM ALL_CellLine

mousemine:
	SELECT count(*)
	FROM CellLine

#------------------------------------------------------
[TEST:Number of cell lines associated with Pax6 alleles]
mgi:
	SELECT count(distinct cl._cellline_key)
	FROM MRK_Marker m, ALL_Allele a, ALL_Allele_CellLine acl, ALL_CellLine cl
	WHERE m.symbol = 'Pax6'
	AND m._organism_key = 1
	AND m._marker_key = a._marker_key
	AND a._allele_key = acl._allele_key
	AND acl._mutantcellline_key = cl._cellLine_key

mousemine:
	SELECT count(c.id)
	FROM Gene g, Organism o, Allele a, AllelesCellLines ac, CellLine c
	WHERE g.symbol = 'Pax6'
	AND g.organismid = o.id
	AND o.taxonid = 10090
	AND a.featureid = g.id
	AND a.id = ac.alleles
	AND ac.celllines = c.id

#------------------------------------------------------
[TEST:Number of cell lines associated with Abc genotypes via allele1]
mgi:
	SELECT count(distinct c._cellline_key)
	FROM MRK_Marker m, ALL_Allele a, GXD_AllelePair gap, ALL_CellLine c
	WHERE m.symbol like 'Abc%'
	AND m._organism_key = 1
	AND m._marker_key = a._marker_key
	AND a._allele_key = gap._allele_key_1
	AND gap._mutantcellline_key_1 = c._cellline_key

mousemine:
	SELECT count(distinct c.id)
	FROM Gene g, Organism o, Allele a, GenotypeAllelePair gap, CellLine c
	WHERE g.symbol like 'Abc%'
	AND g.organismid = o.id
	AND o.taxonid = 10090
	AND g.id = a.featureid
	AND a.id = gap.allele1id
	AND gap.mutantcellline1id = c.id

#------------------------------------------------------
[TEST:Number of MP annotations specific to female]
mgi:
	SELECT count(distinct e._annotevidence_key) as "count"
	FROM 
	    VOC_Evidence_Property p,
	        VOC_Evidence e,
		    VOC_Annot a
		    WHERE p._annotevidence_key = e._annotevidence_key
		    AND e._annot_key = a._annot_key
		    AND a._annottype_key = 1002
		    AND p.value in ('F','f')

mousemine:
	SELECT count(*) as count
	FROM OntologyAnnotationEvidence e, OntologyAnnotation a, MPTerm t
	WHERE e.annotationExtension = 'specific_to(female)'
	AND e.annotationid = a.id
	AND a.ontologytermid = t.id

#------------------------------------------------------
[TEST:Number of MP annotations specific to male]
mgi:
	SELECT count(distinct e._annotevidence_key) as "count"
	FROM 
	    VOC_Evidence_Property p,
	        VOC_Evidence e,
		    VOC_Annot a
		    WHERE p._annotevidence_key = e._annotevidence_key
		    AND e._annot_key = a._annot_key
		    AND a._annottype_key = 1002
		    AND p.value in ('M','m')

mousemine:
	SELECT count(*) as count
	FROM OntologyAnnotationEvidence e, OntologyAnnotation a, MPTerm t
	WHERE e.annotationExtension = 'specific_to(male)'
	AND e.annotationid = a.id
	AND a.ontologytermid = t.id

#------------------------------------------------------
[TEST:Number of EMAPA terms should be the same]
mgi:
    SELECT count(*) from VOC_Term_EMAPA

mousemine:
    SELECT count(*) from EMAPATerm

#------------------------------------------------------
[TEST:Number of features with expression data, by assay type]
mgi:
    SELECT t.assayType, count(distinct a._marker_key)
    FROM GXD_Expression a, GXD_AssayType t
    WHERE a._assaytype_key = t._assaytype_key
    AND a._assayType_key not in (10,11)
    GROUP BY t.assayType

mousemine:
    SELECT assayType, count(distinct featureid)
    FROM gxdexpression
    GROUP BY assayType

#------------------------------------------------------
[TEST:Number of expression results for Pax6 of each type]
mgi:
    SELECT t.assayType, count(distinct e._expression_key)
    FROM gxd_expression e, mrk_marker m, gxd_assaytype t
    WHERE e.isForGXD = 1
    AND e._marker_key = m._marker_key
    AND m.symbol = 'Pax6'
    AND e._assaytype_key = t._assaytype_key
    GROUP BY t.assayType
    ORDER BY t.assayType

mousemine:
    SELECT assayType, count(*)
    FROM gxdexpression e, sequencefeature f
    WHERE e.featureid = f.id
    AND f.symbol = 'Pax6'
    GROUP BY assayType
    ORDER BY assayType

#------------------------------------------------------
[TEST:Number of expression results for 'heart atrium' and substructures should be 'close']
mgi:
    SELECT count(distinct e._expression_key)
    FROM GXD_Expression e
    WHERE e.isForGXD = 1
    AND e._structure_key in (
      SELECT s._structure_key
      FROM GXD_Structure s, GXD_StructureClosure c, GXD_Structure s2
      WHERE s2.printName IN ('atrium','heart atrium')
      AND s2._structure_key = c._structure_key
      AND c._descendent_key = s._structure_key
      UNION
      SELECT _structure_key
      FROM GXD_Structure
      WHERE printName IN ('atrium','heart atrium'))

mousemine:
    SELECT count(*)
    FROM gxdexpression g, emapaterm t, ontologytermparents otp, emapaterm p
    WHERE g.structureid = t.id
    AND t.id = otp.ontologyterm
    AND otp.parents = p.id
    AND p.name IN ('atrium','heart atrium')

filter : x[0]['count']

compare: 1-min(1.0*x,y)/max(1.0*x,y) < .01
